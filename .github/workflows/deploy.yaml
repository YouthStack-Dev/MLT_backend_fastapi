name: Build & Deploy to VPS

on:
  pull_request:
    types: [closed]
    branches:

      - main

env:
  AWS_REGION: ap-south-1

  REPO_NAME: fleet

  IMAGE_TAG: latest
  STACK_NAME: fleet-service_manager


jobs:
  build-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./service_manager
        push: true
        tags: dheerajkumarp/fleet_service_manager:latest

    - name: Copy docker-compose.prod.yml to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        source: "docker-compose.prod.yml"
        target: "~/"

    - name: SSH & deploy on VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          docker compose -f ~/docker-compose.prod.yml down --volumes --remove-orphans
          docker image prune -af
          docker volume prune -f
          docker network prune -f
          docker pull dheerajkumarp/fleet_service_manager:latest
          docker compose -f ~/docker-compose.prod.yml up -d --force-recreate
          docker system prune -af

#           docker pull dheerajkumarp/fleet_service_manager:latest
#           docker compose -f ~/docker-compose.prod.yml up -d
#           docker system prune -af
# # now enabled the work flow
